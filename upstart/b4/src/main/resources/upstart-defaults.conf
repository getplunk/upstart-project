# all file-paths herein should be relative to ${B4_ROOT}. This allows consuming projects that operate elsewhere
# to reference these target-definitions, by defining B4_ROOT as appropriate relative to their location
B4_ROOT: .

b4 {
  program-name: b4

  targetTemplates {
    maven-projects {
      targets {
//        b4 {projectPath: ${B4_ROOT}/upstart/b4}
      }

      template: """
        /build/%{NAME} {
          description: "build maven project: %{projectPath}"
          dependencies: [b4-maven]
          taskConfig {
            ## mvn.projects += "%{projectPath}"  ## `+=` doesn't work here, because `config.atPath` doesn't handle nested interpolations correctly. TODO: can we fix this?
            mvn: "projects: ${?b4.tasks.mvn.projects} [\"%{projectPath}\"]"
          }
        }
      """
    }
  }

  functions {
    /mvn: upstart.b4.functions.MavenFunction

    /file {
      /copy: upstart.b4.functions.FileCopyFunction
      /template: upstart.b4.functions.FreemarkerTemplateFunction
      /create-dir: upstart.b4.functions.CreateDirectoriesFunction
    }

    /process/exec: upstart.b4.functions.ProcessExecFunction
  }

  targets {
    /b4-maven.tasks: [mvn]

//    /build/b4.taskConfig.mvn: "extraArgs: ${b4.tasks.mvn.extraArgs} [-Pb4]"

    /build.description: compilation targets

    /test {
      dependencies: [b4-maven]
      description: "execute tests with maven (skips 'package'; use -c to ensure clean sources)"
      taskConfig.mvn: "goals: ${?b4.tasks.mvn.goals} [test], skipTests: false"
    }
  }

  generators {
  }

  tasks {
  }
}

maven.mvnExecutable: mvn

upstart.context {
  application: b4
  owner: upstart
}

upstart.log.rootLogger: info
upstart.log.levels.upstart: warn
//upstart.log.levels: {
//  "upstart.upstart": warn
//} ${?upstart.log.levels}
